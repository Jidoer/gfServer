// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0--rc1
// source: GameRoom.proto

package protorpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchStatus int32

const (
	MatchStatus_MATCHING     MatchStatus = 0
	MatchStatus_MATCHED      MatchStatus = 1
	MatchStatus_FAILED       MatchStatus = 2
	MatchStatus_CONNECTING   MatchStatus = 3 //连接中
	MatchStatus_CONNECTED    MatchStatus = 4 //连接成功
	MatchStatus_DISCONNECTED MatchStatus = 5 //连接断开
	MatchStatus_TIMEOUT      MatchStatus = 6 //连接超时
	MatchStatus_CANCEL       MatchStatus = 7 //取消匹配
	MatchStatus_ERROR        MatchStatus = 8 //错误
)

// Enum value maps for MatchStatus.
var (
	MatchStatus_name = map[int32]string{
		0: "MATCHING",
		1: "MATCHED",
		2: "FAILED",
		3: "CONNECTING",
		4: "CONNECTED",
		5: "DISCONNECTED",
		6: "TIMEOUT",
		7: "CANCEL",
		8: "ERROR",
	}
	MatchStatus_value = map[string]int32{
		"MATCHING":     0,
		"MATCHED":      1,
		"FAILED":       2,
		"CONNECTING":   3,
		"CONNECTED":    4,
		"DISCONNECTED": 5,
		"TIMEOUT":      6,
		"CANCEL":       7,
		"ERROR":        8,
	}
)

func (x MatchStatus) Enum() *MatchStatus {
	p := new(MatchStatus)
	*p = x
	return p
}

func (x MatchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_GameRoom_proto_enumTypes[0].Descriptor()
}

func (MatchStatus) Type() protoreflect.EnumType {
	return &file_GameRoom_proto_enumTypes[0]
}

func (x MatchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchStatus.Descriptor instead.
func (MatchStatus) EnumDescriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{0}
}

type Player struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client_ client.Client
	ClientID      string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Uid           int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username      string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_GameRoom_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *Player) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Player) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GameRoom struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	RoomName       string                 `protobuf:"bytes,2,opt,name=RoomName,proto3" json:"RoomName,omitempty"`
	Ip             string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port           int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	CurrentPlayers int32                  `protobuf:"varint,5,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"` // 当前玩家数
	Playeras       []*Player              `protobuf:"bytes,6,rep,name=Playeras,proto3" json:"Playeras,omitempty"`
	Turn           int32                  `protobuf:"varint,7,opt,name=Turn,proto3" json:"Turn,omitempty"`
	Finished       bool                   `protobuf:"varint,8,opt,name=Finished,proto3" json:"Finished,omitempty"`
	Matched        bool                   `protobuf:"varint,9,opt,name=Matched,proto3" json:"Matched,omitempty"`
	GameType       int32                  `protobuf:"varint,10,opt,name=GameType,proto3" json:"GameType,omitempty"`                   //opening_xxx closed_xxx
	Status         string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`                        // 房间状态（如：等待中、进行中、已结束）
	CreatorId      string                 `protobuf:"bytes,12,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"` // 创建者ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameRoom) Reset() {
	*x = GameRoom{}
	mi := &file_GameRoom_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoom) ProtoMessage() {}

func (x *GameRoom) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoom.ProtoReflect.Descriptor instead.
func (*GameRoom) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{1}
}

func (x *GameRoom) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GameRoom) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GameRoom) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GameRoom) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GameRoom) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *GameRoom) GetPlayeras() []*Player {
	if x != nil {
		return x.Playeras
	}
	return nil
}

func (x *GameRoom) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *GameRoom) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *GameRoom) GetMatched() bool {
	if x != nil {
		return x.Matched
	}
	return false
}

func (x *GameRoom) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *GameRoom) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GameRoom) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

// Mester-->subServer
type CreateRoomParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	GameType      int32                  `protobuf:"varint,2,opt,name=GameType,proto3" json:"GameType,omitempty"` //un use
	Room          *GameRoom              `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomParam) Reset() {
	*x = CreateRoomParam{}
	mi := &file_GameRoom_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomParam) ProtoMessage() {}

func (x *CreateRoomParam) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomParam.ProtoReflect.Descriptor instead.
func (*CreateRoomParam) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRoomParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateRoomParam) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *CreateRoomParam) GetRoom() *GameRoom {
	if x != nil {
		return x.Room
	}
	return nil
}

// Mester<--subServer
type CreateRoomResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomKey       string                 `protobuf:"bytes,1,opt,name=RoomKey,proto3" json:"RoomKey,omitempty"`
	Result        bool                   `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomResult) Reset() {
	*x = CreateRoomResult{}
	mi := &file_GameRoom_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResult) ProtoMessage() {}

func (x *CreateRoomResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResult.ProtoReflect.Descriptor instead.
func (*CreateRoomResult) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoomResult) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *CreateRoomResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GamePlaying struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Playeras      []*Player              `protobuf:"bytes,2,rep,name=Playeras,proto3" json:"Playeras,omitempty"`
	GameStatus    int32                  `protobuf:"varint,3,opt,name=GameStatus,proto3" json:"GameStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GamePlaying) Reset() {
	*x = GamePlaying{}
	mi := &file_GameRoom_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePlaying) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlaying) ProtoMessage() {}

func (x *GamePlaying) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlaying.ProtoReflect.Descriptor instead.
func (*GamePlaying) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{4}
}

func (x *GamePlaying) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GamePlaying) GetPlayeras() []*Player {
	if x != nil {
		return x.Playeras
	}
	return nil
}

func (x *GamePlaying) GetGameStatus() int32 {
	if x != nil {
		return x.GameStatus
	}
	return 0
}

// ------------SCORE---
type GameFinished struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Playeras      []*Player              `protobuf:"bytes,2,rep,name=Playeras,proto3" json:"Playeras,omitempty"`
	GameStatus    int32                  `protobuf:"varint,3,opt,name=GameStatus,proto3" json:"GameStatus,omitempty"`
	Scores        []*PlayerScore         `protobuf:"bytes,4,rep,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameFinished) Reset() {
	*x = GameFinished{}
	mi := &file_GameRoom_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinished) ProtoMessage() {}

func (x *GameFinished) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinished.ProtoReflect.Descriptor instead.
func (*GameFinished) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{5}
}

func (x *GameFinished) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GameFinished) GetPlayeras() []*Player {
	if x != nil {
		return x.Playeras
	}
	return nil
}

func (x *GameFinished) GetGameStatus() int32 {
	if x != nil {
		return x.GameStatus
	}
	return 0
}

func (x *GameFinished) GetScores() []*PlayerScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

type PlayerScore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerUID     int32                  `protobuf:"varint,1,opt,name=PlayerUID,proto3" json:"PlayerUID,omitempty"`
	Score         int32                  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerScore) Reset() {
	*x = PlayerScore{}
	mi := &file_GameRoom_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerScore) ProtoMessage() {}

func (x *PlayerScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerScore.ProtoReflect.Descriptor instead.
func (*PlayerScore) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerScore) GetPlayerUID() int32 {
	if x != nil {
		return x.PlayerUID
	}
	return 0
}

func (x *PlayerScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerScore) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// opening room lists
type RoomListParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameType      int32                  `protobuf:"varint,1,opt,name=GameType,proto3" json:"GameType,omitempty"` //游戏类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomListParam) Reset() {
	*x = RoomListParam{}
	mi := &file_GameRoom_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomListParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomListParam) ProtoMessage() {}

func (x *RoomListParam) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomListParam.ProtoReflect.Descriptor instead.
func (*RoomListParam) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{7}
}

func (x *RoomListParam) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type RoomListResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rooms         []*GameRoom            `protobuf:"bytes,1,rep,name=Rooms,proto3" json:"Rooms,omitempty"`    //房间列表
	Result        bool                   `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"` //操作结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomListResult) Reset() {
	*x = RoomListResult{}
	mi := &file_GameRoom_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomListResult) ProtoMessage() {}

func (x *RoomListResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomListResult.ProtoReflect.Descriptor instead.
func (*RoomListResult) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{8}
}

func (x *RoomListResult) GetRooms() []*GameRoom {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *RoomListResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// CLIENT --> SERVER  request
type MatchParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //没啥用 服务器存储用户信息
	MatchType     int32                  `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchParam) Reset() {
	*x = MatchParam{}
	mi := &file_GameRoom_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchParam) ProtoMessage() {}

func (x *MatchParam) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchParam.ProtoReflect.Descriptor instead.
func (*MatchParam) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{9}
}

func (x *MatchParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchParam) GetMatchType() int32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

// SERVER --> CLIENT response
// 服务器收到匹配请求 客户端等待匹配结果
type MatchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Status        MatchStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=protorpc.MatchStatus" json:"status,omitempty"` //匹配状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchResult) Reset() {
	*x = MatchResult{}
	mi := &file_GameRoom_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResult) ProtoMessage() {}

func (x *MatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResult.ProtoReflect.Descriptor instead.
func (*MatchResult) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{10}
}

func (x *MatchResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MatchResult) GetStatus() MatchStatus {
	if x != nil {
		return x.Status
	}
	return MatchStatus_MATCHING
}

// SERVER --> CLIENT
// 匹配成功通知客户端
type MatchOKParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Room          *GameRoom              `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	MatchServer   *Server                `protobuf:"bytes,3,opt,name=match_server,json=matchServer,proto3" json:"match_server,omitempty"`
	RoomKey       string                 `protobuf:"bytes,4,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Status        MatchStatus            `protobuf:"varint,5,opt,name=status,proto3,enum=protorpc.MatchStatus" json:"status,omitempty"` //匹配状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchOKParam) Reset() {
	*x = MatchOKParam{}
	mi := &file_GameRoom_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchOKParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchOKParam) ProtoMessage() {}

func (x *MatchOKParam) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchOKParam.ProtoReflect.Descriptor instead.
func (*MatchOKParam) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{11}
}

func (x *MatchOKParam) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MatchOKParam) GetRoom() *GameRoom {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *MatchOKParam) GetMatchServer() *Server {
	if x != nil {
		return x.MatchServer
	}
	return nil
}

func (x *MatchOKParam) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *MatchOKParam) GetStatus() MatchStatus {
	if x != nil {
		return x.Status
	}
	return MatchStatus_MATCHING
}

// CLIENT(√) --> SERVER
// 客户端收到通知 客户端连接SUB服务器
type MatchOKResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Status        MatchStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=protorpc.MatchStatus" json:"status,omitempty"` //连接状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchOKResult) Reset() {
	*x = MatchOKResult{}
	mi := &file_GameRoom_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchOKResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchOKResult) ProtoMessage() {}

func (x *MatchOKResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoom_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchOKResult.ProtoReflect.Descriptor instead.
func (*MatchOKResult) Descriptor() ([]byte, []int) {
	return file_GameRoom_proto_rawDescGZIP(), []int{12}
}

func (x *MatchOKResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MatchOKResult) GetStatus() MatchStatus {
	if x != nil {
		return x.Status
	}
	return MatchStatus_MATCHING
}

var File_GameRoom_proto protoreflect.FileDescriptor

var file_GameRoom_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x1a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x02, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x67, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x44, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52,
	0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d,
	0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9d, 0x01,
	0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x5d, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0d,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x0e, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a,
	0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xcd, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x4b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x56, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x4b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x89, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x08, 0x42, 0x14, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x72, 0x70, 0x63, 0xaa, 0x02, 0x04, 0x63, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_GameRoom_proto_rawDescOnce sync.Once
	file_GameRoom_proto_rawDescData []byte
)

func file_GameRoom_proto_rawDescGZIP() []byte {
	file_GameRoom_proto_rawDescOnce.Do(func() {
		file_GameRoom_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_GameRoom_proto_rawDesc), len(file_GameRoom_proto_rawDesc)))
	})
	return file_GameRoom_proto_rawDescData
}

var file_GameRoom_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_GameRoom_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_GameRoom_proto_goTypes = []any{
	(MatchStatus)(0),         // 0: protorpc.MatchStatus
	(*Player)(nil),           // 1: protorpc.Player
	(*GameRoom)(nil),         // 2: protorpc.GameRoom
	(*CreateRoomParam)(nil),  // 3: protorpc.CreateRoomParam
	(*CreateRoomResult)(nil), // 4: protorpc.CreateRoomResult
	(*GamePlaying)(nil),      // 5: protorpc.GamePlaying
	(*GameFinished)(nil),     // 6: protorpc.GameFinished
	(*PlayerScore)(nil),      // 7: protorpc.PlayerScore
	(*RoomListParam)(nil),    // 8: protorpc.RoomListParam
	(*RoomListResult)(nil),   // 9: protorpc.RoomListResult
	(*MatchParam)(nil),       // 10: protorpc.MatchParam
	(*MatchResult)(nil),      // 11: protorpc.MatchResult
	(*MatchOKParam)(nil),     // 12: protorpc.MatchOKParam
	(*MatchOKResult)(nil),    // 13: protorpc.MatchOKResult
	(*Server)(nil),           // 14: protorpc.Server
}
var file_GameRoom_proto_depIdxs = []int32{
	1,  // 0: protorpc.GameRoom.Playeras:type_name -> protorpc.Player
	2,  // 1: protorpc.CreateRoomParam.room:type_name -> protorpc.GameRoom
	1,  // 2: protorpc.GamePlaying.Playeras:type_name -> protorpc.Player
	1,  // 3: protorpc.GameFinished.Playeras:type_name -> protorpc.Player
	7,  // 4: protorpc.GameFinished.scores:type_name -> protorpc.PlayerScore
	2,  // 5: protorpc.RoomListResult.Rooms:type_name -> protorpc.GameRoom
	0,  // 6: protorpc.MatchResult.status:type_name -> protorpc.MatchStatus
	2,  // 7: protorpc.MatchOKParam.room:type_name -> protorpc.GameRoom
	14, // 8: protorpc.MatchOKParam.match_server:type_name -> protorpc.Server
	0,  // 9: protorpc.MatchOKParam.status:type_name -> protorpc.MatchStatus
	0,  // 10: protorpc.MatchOKResult.status:type_name -> protorpc.MatchStatus
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_GameRoom_proto_init() }
func file_GameRoom_proto_init() {
	if File_GameRoom_proto != nil {
		return
	}
	file_server_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_GameRoom_proto_rawDesc), len(file_GameRoom_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameRoom_proto_goTypes,
		DependencyIndexes: file_GameRoom_proto_depIdxs,
		EnumInfos:         file_GameRoom_proto_enumTypes,
		MessageInfos:      file_GameRoom_proto_msgTypes,
	}.Build()
	File_GameRoom_proto = out.File
	file_GameRoom_proto_goTypes = nil
	file_GameRoom_proto_depIdxs = nil
}
